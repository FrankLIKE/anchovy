/*
Copyright (c) 2013 Andrey Penechko

Boost Software License - Version 1.0 - August 17th, 2003

Permission is hereby granted, free of charge, to any person or organization
obtaining a copy of the software and accompanying documentation covered by
this license the "Software" to use, reproduce, display, distribute,
execute, and transmit the Software, and to prepare derivative works of the
Software, and to permit third-parties to whom the Software is furnished to
do so, all subject to the following:

The copyright notices in the Software and this entire statement, including
the above license grant, this restriction and the following disclaimer,
must be included in all copies of the Software, in whole or in part, and
all derivative works of the Software, unless such copies or derivative
works are solely in the form of machine-executable object code generated by
a source language processor.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
DEALINGS IN THE SOFTWARE.
*/

module anchovy.gui.interfaces.iwidget;

import anchovy.gui.all;

/// Used to specify Widget.anchor.
enum Sides
{
	LEFT = 1,
	RIGHT = 2,
	TOP = 4,
	BOTTOM = 8,
}

/// Will be splitted in few interfaces.
abstract class IWidget
{
public:

	//+-------------------------------------------------------------------------------+
	//|                                Event handling                                 |
	//+-------------------------------------------------------------------------------+

	bool handleEvent(Event event);
	
	bool recursiveHandleEvent(Event event);
	
	//+-------------------------------------------------------------------------------+
	//|                                  Properties                                   |
	//+-------------------------------------------------------------------------------+

	@property
	{
		/** 
		Anchored sides of the widget.
		Can be constructed by ORing Anchor values.
		Examples:
		---
		widget.anchor = Sides.LEFT | Sides.RIGHT;
		 ---
		*/
		uint anchor();
		
		/// ditto
		void anchor(uint newAnchor);
		
		// Used internally by GuiRenderer.
		ref TexRectArray[string] geometry();
		
		void addChild(IWidget child);
		IWidget[] children();

		void parent(IWidget newParent);
		IWidget parent();
		
		void position(ivec2 newPosition);
		ivec2 position();
		ivec2 staticPosition();

		void userSize(ivec2 newSize);
		ivec2 userSize();
		ivec2 prefferedSize();

		final Rect staticRect()
		{
			return Rect(staticPosition, prefferedSize);
		}
		
		void skin(GuiSkin newSkin);
		GuiSkin skin();
		
		string state();
		void state(string newState);
		
		string style();
		void style(string newStyle);

		bool isFocusable();
		void isFocusable(bool newIsFocusable);
	}
}